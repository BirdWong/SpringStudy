<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="testDao" class="dynamic.jdk.impl.TestDaoImple"/>

    <!--&lt;!&ndash;<bean id="myAspect" class="spring.proxyfactorybean.MyAspect"/>&ndash;&gt;-->

    <!--<bean id="testDaoProxy" class="org.springframework.aop.framework.ProxyFactoryBean">-->
        <!--&lt;!&ndash;指定代理实现的接口&ndash;&gt;-->
        <!--<property name="proxyInterfaces" value="dynamic.jdk.TestDao"/>-->
        <!--&lt;!&ndash;指定目标对象&ndash;&gt;-->
        <!--<property name="target" ref="testDao"/>-->
        <!--&lt;!&ndash;指定切面，织入环绕通知&ndash;&gt;-->
        <!--<property name="interceptorNames" value="myAspect"/>-->
        <!--&lt;!&ndash;指定代理方式，true指定CGLIB动态代理，默认为false，指定JDK动态代理&ndash;&gt;-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->

    <!--<bean id="myAspect" class="aspect.xml.MyAspect"/>-->

    <!--<aop:config>-->
        <!--<aop:aspect ref="myAspect">-->
            <!--&lt;!&ndash;配置切入点，通知增强哪些方法&ndash;&gt;-->
            <!--<aop:pointcut id="myPointCut" expression="execution(* dynamic.jdk.*.*(..))"/>-->

            <!--&lt;!&ndash;将通知于切入点关联&ndash;&gt;-->
            <!--&lt;!&ndash;关联迁址通知&ndash;&gt;-->
            <!--<aop:before method="before" pointcut-ref="myPointCut" />-->
            <!--&lt;!&ndash;关联后置返回通知，在目标方法成功执行后执行&ndash;&gt;-->
            <!--<aop:after-returning method="afterReturning" pointcut-ref="myPointCut"/>-->
            <!--&lt;!&ndash;关联环绕通知&ndash;&gt;-->
            <!--<aop:around method="around" pointcut-ref="myPointCut"/>-->
            <!--&lt;!&ndash;关联异常通知：没有异常发生时不会执行增强，throwing属性设置通知的第二个参数名称&ndash;&gt;-->
            <!--<aop:after-throwing method="except" pointcut-ref="myPointCut" throwing="e"/>-->
            <!--&lt;!&ndash;关联后置（最终）通知，不管目标方法是否成功都要执行&ndash;&gt;-->
            <!--<aop:after method="after" pointcut-ref="myPointCut"/>-->

        <!--</aop:aspect>-->
    <!--</aop:config>-->


    <!--指定需要扫描的包，使注解生效-->
    <context:component-scan base-package="aspect.annotation"/>
    <context:component-scan base-package="dynamic.jdk"/>
    <!--启动基于注解的AspectJ支持-->
    <aop:aspectj-autoproxy/>
</beans>